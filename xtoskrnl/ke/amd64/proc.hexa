/// Gets the processor block for the currently executing processor.
/// 
/// @return This routine returns the current processor block read from the GS register.
/// 
/// @since XT 1.0
fun keGetCurrentProcessorBlock() {
	return arReadGSQuadWord(__builtin_offsetof<Unsigned long long>()) as! PKPROCESSOR_BLOCK
}

/// Gets the processor control block for the currently executing processor.
/// 
/// @return This routine returns the current processor control block read from the GS register.
/// 
/// @since XT 1.0
fun keGetCurrentProcessorControlBlock() {
	return arReadGSQuadWord(__builtin_offsetof<Unsigned long long>()) as! PKPROCESSOR_CONTROL_BLOCK
}

/// Gets the number of the currently executing processor.
/// 
/// @return This routine returns the zero-indexed processor number.
/// 
/// @since XT 1.0
fun keGetCurrentProcessorNumber() {
	return arReadGSQuadWord(__builtin_offsetof<Unsigned long long>()) as! ULONG
}

/// Gets the current thread running on the currently executing processor.
/// 
/// @return This routine returns the address of the current thread object.
/// 
/// @since NT 3.5
fun keGetCurrentThread() {
	return arReadGSQuadWord(__builtin_offsetof<Unsigned long long>()) as! PKTHREAD
}

/// Saves the current processor state.
/// 
/// @param State
///        Supplies a pointer to the processor state structure.
/// 
/// @return This routine does not return any value.
/// 
/// @since XT 1.0
fun kepSaveProcessorState(cpuState PKPROCESSOR_STATE) {
	cpuState.specialRegisters.cr0 = arReadControlRegister(0)
	cpuState.specialRegisters.cr2 = arReadControlRegister(2)
	cpuState.specialRegisters.cr3 = arReadControlRegister(3)
	cpuState.specialRegisters.cr4 = arReadControlRegister(4)
	cpuState.specialRegisters.cr8 = arReadControlRegister(8)
	cpuState.specialRegisters.kernelDr0 = arReadDebugRegister(0)
	cpuState.specialRegisters.kernelDr1 = arReadDebugRegister(1)
	cpuState.specialRegisters.kernelDr2 = arReadDebugRegister(2)
	cpuState.specialRegisters.kernelDr3 = arReadDebugRegister(3)
	cpuState.specialRegisters.kernelDr6 = arReadDebugRegister(6)
	cpuState.specialRegisters.kernelDr7 = arReadDebugRegister(7)
	cpuState.specialRegisters.msrGsBase = arReadModelSpecificRegister(3221225729)
	cpuState.specialRegisters.msrGsSwap = arReadModelSpecificRegister(3221225730)
	cpuState.specialRegisters.msrCStar = arReadModelSpecificRegister(3221225603)
	cpuState.specialRegisters.msrLStar = arReadModelSpecificRegister(3221225602)
	cpuState.specialRegisters.msrStar = arReadModelSpecificRegister(3221225601)
	cpuState.specialRegisters.msrSyscallMask = arReadModelSpecificRegister(3221225604)
	cpuState.specialRegisters.mxCsr = arReadMxCsrRegister()
	arStoreGlobalDescriptorTable(cpuState.specialRegisters.gdtr.limit)
	arStoreInterruptDescriptorTable(cpuState.specialRegisters.idtr.limit)
	arStoreLocalDescriptorTable(cpuState.specialRegisters.ldtr)
	arStoreTaskRegister(cpuState.specialRegisters.tr)
}
