/// Gets the current run level from APIC for the current processor.
/// 
/// @return This routine returns the current run level.
/// 
/// @since XT 1.0
fun hlGetRunLevel() {
	return arReadControlRegister(8) as! KRUNLEVEL
}

/// Sets new run level for the current processor.
/// 
/// @param RunLevel
///        Supplies the new run level to store into APIC.
/// 
/// @return This routine does not return any value.
/// 
/// @since XT 1.0
fun hlSetRunLevel(runLevel KRUNLEVEL) {
	arWriteControlRegister(8, runLevel)
}

/// Maps APIC interrupt vector to XT run level.
/// 
/// @param Tpr
///        Supplies the interrupt vector rad from APIC Task Priority Register.
/// 
/// @return This routine returns the XT run level corresponding to the specified APIC interrupt vector.
/// 
/// @since XT 1.0
fun hlpTransformApicTprToRunLevel(tpr UCHAR) {
	return (tpr >> 4) as! KRUNLEVEL
}

/// Maps XT run level to interrupt vector suitable for the APIC Task Priority Register.
/// 
/// @param RunLevel
///        Supplies the XT run level.
/// 
/// @return This routine returns the APIC interrupt vector corresponding to the specified XT run level.
/// 
/// @since XT 1.0
fun hlpTransformRunLevelToApicTpr(runLevel KRUNLEVEL) {
	return (runLevel << 4)
}
