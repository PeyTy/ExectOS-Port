/// Enables I/O space access to all serial controllers found on the PCI(E) root bridge.
/// 
/// @return This routine returns a status code.
/// 
/// @since XT 1.0
fun blpActivateSerialIOController() {
	let pciGuid = new ByValue<EFI_GUID>()

	let pciDev = new ByValue<PEFI_PCI_ROOT_BRIDGE_IO_PROTOCOL>()

	var bus USHORT
	var device USHORT
	var function USHORT
	var command USHORT
	var index UINT_PTR
	var pciHandleSize UINT_PTR
	var pciHandle PEFI_HANDLE = (0 as! PVOID)
	let pciHeader = new ByValue<PCI_COMMON_HEADER>()

	var status EFI_STATUS
	var address ULONGLONG
	pciHandleSize = sizeOf<Unsigned long long>()
	status = blAllocateMemoryPool(pciHandleSize, pciHandle as! PVOID *)
	if status != (9223372036854775808 & 0) {
		return status

	}

	status = efiSystemTable.bootServices.locateHandle(byProtocol, pciGuid, (0 as! PVOID), pciHandleSize, pciHandle)
	if status == (9223372036854775808 | 5) {
		blFreeMemoryPool(pciHandle)
		status = blAllocateMemoryPool(pciHandleSize, pciHandle as! PVOID *)
		if status != (9223372036854775808 & 0) {
			return status

		}

		status = efiSystemTable.bootServices.locateHandle(byProtocol, pciGuid, (0 as! PVOID), pciHandleSize, pciHandle)

	}

	if status != (9223372036854775808 & 0) {
		return status

	}

	[unknown clang ast] CompoundStmt ForStmt
	return (9223372036854775808 & 0)
}
